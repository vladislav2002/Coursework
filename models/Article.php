<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "article".
 *
 * @property int $id
 * @property string|null $title
 * @property string|null $description
 * @property string|null $image_path
 * @property string|null $markers
 * @property int|null $user_id
 * @property int|null $topic_id
 * @property string|null $date
 */
class Article extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'article';
    }

    /**
     * {@inheritdoc}
     */
    public function rules(){
        return [

            [['id', 'title','description','markers','topic_id','user_id'], 'required'],
            [['title','description'], 'string'],
            [['date'], 'date', 'format'=>'php:Y-m-d'],
            [['date'], 'default', 'value'=>date('Y-m-d')],
            [['topic_id', 'user_id'], 'integer'],
            //[['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            //[['topic_id'], 'exist', 'skipOnError' => true, 'targetClass' => Topic::className(), 'targetAttribute' => ['topic_id' => 'id']],
        ];
    }


    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'image_path' => 'Image Path',
            'markers' => 'Markers',
            'user_id' => 'User ID',
            'topic_id' => 'Topic ID',
            'date' => 'Date',
        ];
    }

    public function saveImage($filename){
        $this->image_path = $filename;
        return $this->save(false);
    }

    public function deleteImage(){
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image_path);

    }

    public function beforeDelete(){
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getImage(){
        if($this->image_path){
            return '/uploads/' . $this->image_path;
        }
        return '/no-image.png';
    }
}
